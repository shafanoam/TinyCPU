# Hello world program :D

message 0xe10 Hello, world!

var messageLength 14

var one 1

# start address here is 0x(x)10, and 10 hex is 16 decimal
var charAddress 16


lda @messageLength
mov a, b
lda @one
mov a, c
# now have length of message in b, and 01 in c for subtraction

.mainLoop

# start address to a
lda @charAddress

# storing it where the lower 8 bits in the load character will be
sta .loadlocation
# store in D for diagnostics, remove when no longer needed
mov a, d
#following load is at address 0x00b and 0x00c; it loads the current character
..loadlocation
lda 0xe00
sta 0xffd

# Add one value to address then store for later use
mov d, a
add c, a
sta @charAddress

# subtract 1 from b, if it's now zero then jump to end and halt
mov b, a
sub c, a
mov a, b
snz
jmp .end
jmp .mainLoop


.end
hlt