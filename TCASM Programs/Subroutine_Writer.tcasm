message 0xef9 Ready.
var charAddress 233
var messageLength 0
var one 1
data 0xf00 1
06

.loop
cal .cout
hlt
jmp.loop

# ### Console Out Function
.cout

# initial setup
lda @messageLength
mov a, b
lda @one
mov a, c
# now have length of message in b, and 01 in c for subtraction

.cout_standard_loop

# start address to a
lda @charAddress

# storing it where the lower 8 bits in the load character will be
sta .loadlocation_for_cout

# store in D temporarily
mov a, d

#outputs the current character
..loadlocation_for_cout
lda 0xe00
sta 0xffd

# Add one value to address then store for later use
mov d, a
add c, a
sta @charAddress

# subtract 1 from b, if it's now zero then return else repeat loop
mov b, a
sub c, a
mov a, b
snz
jmp .cout_return_to_main
jmp .cout_standard_loop

.cout_return_to_main
ret
