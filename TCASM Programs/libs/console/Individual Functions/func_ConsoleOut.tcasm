# CONSOLE OUTPUT FUNCTION
# FOR USE IN CONSOLE LIBRARY
#
# Takes any message of any length that starts at 0xexx
#
# Preserves no registers.
#
# It assumes the following variables:
# charAddress       set to the starting location is and will be modified by the function
# messageLength     set to the length of the message
# one               a variable that should already exist by common sense, obviously always set to 1
#
# TO USE:
# cal .cout



# ### Console Out Function
.cout

# initial setup
lda @messageLength
mov a, b
lda @one
mov a, c
# now have length of message in b, and 01 in c for subtraction

.cout_standard_loop

# start address to a
lda @charAddress

# storing it where the lower 8 bits in the load character will be
sta .loadlocation_for_cout

# store in D temporarily
mov a, d

#outputs the current character
..loadlocation_for_cout
lda 0xe00
sta 0xffd

# Add one value to address then store for later use
mov d, a
add c, a
sta @charAddress

# subtract 1 from b, if it's now zero then return else repeat loop
mov b, a
sub c, a
mov a, b
snz
jmp .cout_return_to_main
jmp .cout_standard_loop

.cout_return_to_main
ret
